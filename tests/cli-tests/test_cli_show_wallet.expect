#!/usr/bin/expect -f

# Wallet Show Validation Script
# Purpose: Null value validation for wallet show output

# Set timeout for commands
set timeout 10

# Start the CLI program for wallet creation
spawn bash kc "show-wallet"

# Null value validation procedure
proc validate_no_null_values {output} {
    # Initialize validation tracking
    set validation_passed 1
    set validation_details {}

    # Check for explicit null values in top-level keys
    set top_level_keys [list "seed" "counter" "ids" "current"]
    foreach key $top_level_keys {
        if {[string first "\"$key\": null" $output] != -1} {
            lappend validation_details "\n❌ Top-level key '$key' is null"
            set validation_passed 0
        } else {
            lappend validation_details "\n✅ Top-level key '$key' is not null"
        }
    }

    # Check nested keys 0
    set nested_keys_0 [list "mnemonic" "hdkey"]
    foreach key $nested_keys_0 {
        if {[string first "\"$key\": null" $output] != -1} {
            lappend validation_details "\n❌ Nested key '$key' is null"
            set validation_passed 0
        } else {
            lappend validation_details "\n✅ Nested key '$key' is not null"
        }
    }

    # Check nested keys 1
    set nested_keys_1 [list "xpriv" "xpub"]
    foreach key $nested_keys_1 {
        if {[string first "\"$key\": null" $output] != -1} {
            lappend validation_details "\n❌ Nested '$key' is null"
            set validation_passed 0
        } else {
            lappend validation_details "\n✅ Nested '$key' is not null"
        }
    }

    # Check nested ids keys
    set ids_keys [list "did" "account" "index"]
    foreach key $ids_keys {
        if {[string first "\"$key\": null" $output] != -1} {
            lappend validation_details "\n❌ IDs key '$key' is null"
            set validation_passed 0
        } else {
            lappend validation_details "\n✅ IDs key '$key' is not null"
        }
    }

    # Print out all validation details
    puts "\nValidation Details:"
    foreach detail $validation_details {
        puts $detail
    }

    # Final validation summary
    if {$validation_passed} {
        puts "\n✅ Validation Passed: No null values detected"
        return 1
    } else {
        puts "\n🔴 Validation Failed: Null values found"
        return 0
    }
}

# Capture the full output
set output ""
expect {
    -re ".*" {
        append output $expect_out(0,string)
    }
    timeout {
        puts "Test failed: Timeout waiting for output."
        exit 1
    }
}

# Print captured output for debugging
puts "Captured Command Output:\n$output"

# Validate no null values in the output
set validation_result [validate_no_null_values $output]

# Exit with appropriate status
if {$validation_result} {
    exit 0
} else {
    exit 1
}