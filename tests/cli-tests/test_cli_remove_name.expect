#!/usr/bin/expect

# Set timeout to avoid infinite waits
set timeout 10

# Generate a random number between 0 and 100
set random_value [expr {int(rand() * 100)}]

# Start the CLI program you want to test
spawn bash kc create-id "$random_value"

# Look for the specific DID pattern
expect {
    -re "(did:test:\[a-zA-Z0-9]+)" {
        set captured_did $expect_out(1,string)
        puts "\n✅ Captured DID: $captured_did"
    }
    timeout {
        puts "\n❌ Timeout occurred while waiting for output"
        exit 1
    }
    eof {
        puts "\n❌ End of file reached without finding a match"
        exit 1
    }
}

# Verify the captured DID
if {$captured_did eq ""} {
    puts "No DID was captured! \n❌"
    exit 1
}

# Use the captured value in another function call
spawn bash kc add-name qa $captured_did

# Remove the name
spawn bash kc remove-name "qa"

# Wait for the output and check if 'qa' is present
expect {
    "OK" {
        send_user "\n✅ Test Passed: name is removed!\n"
    }
    timeout {
        send_user "\n❌ Test Failed: 'qa' not found in output.\n"
        exit 1
    }
}

# Check List
spawn bash kc list-names

expect {
    # Negative match to fail if "qa" is found
    -re "qa" {
        puts "Error: Unexpected 'qa' found in output \n❌"
        exit 1
    }
    
    # Timeout handling
    timeout {
        puts "Timeout occurred \n❌"
        exit 1
    }
    
    # Default match (successful case)
    eof {
        puts "Process completed successfully \n✅"
        exit 0
    }
}
